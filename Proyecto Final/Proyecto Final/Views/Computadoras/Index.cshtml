<link href="~/css/colors.css" rel="stylesheet" />
<link href="~/css/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="style.css">
<link href="~/css/versions.css" rel="stylesheet" />
<link href="~/css/responsive.css" rel="stylesheet" />
<link href="~/css/custom.css" rel="stylesheet" />
<link href="~/css/style.css" rel="stylesheet" />
<body class="barber_version">



    <div id="wrapper">

        <!-- Sidebar-wrapper -->
        <div id="sidebar-wrapper">
            <div class="side-top">
                <div class="logo-sidebar">
                    Pc
                </div>
                <ul class="sidebar-nav">
                    <li>@Html.ActionLink("Clientes", "Index", "Clientes")</li>
                    <li>@Html.ActionLink("Computadoras", "Index", "Computadoras")</li>
                    <li>@Html.ActionLink("Componentes", "Index", "Componentes")</li>
                    <li>@Html.ActionLink("Facturas", "Index", "Facturas")</li>
                </ul>
            </div>
        </div><!-- End Sidebar-wrapper -->
        <!-- Page Content -->
        <div id="page-content-wrapper">



            @model PagedList.IPagedList<Proyecto_Final.Models.Computadora>
            @using PagedList.Mvc;
            <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

            @{
                ViewBag.Title = "Computadoras";
            }

            <h2>Computadoras</h2>
            <p>
                @Html.ActionLink("Agregar Computadora", "Create")
            </p>
            @using (Html.BeginForm("Index", "Computadoras", FormMethod.Get))
            {
                <p>
                    Busqueda por Nombre: @Html.TextBox("search", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Search" />
                </p>
            }
            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayName("ComputadoraID")
                    </th>
                    <th>
                        @Html.ActionLink("Computadora", "Index", new { sortOrder = ViewBag.NombreSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th>
                        @Html.ActionLink("Precio", "Index", new { sortOrder = ViewBag.PrecioSortParm, currentFilter = ViewBag.CurrentFilter })
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ComputadoraID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Precio)
                        </td>


                        <td>
                            @Html.ActionLink("Editar", "Edit", new { id = item.ComputadoraID }) |
                            @Html.ActionLink("Detalles", "Details", new { id = item.ComputadoraID }) |
                            @Html.ActionLink("Eliminar", "Delete", new { id = item.ComputadoraID })
                        </td>
                    </tr>
                }

            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

            @Html.PagedListPager(Model, page => Url.Action("Index",
                new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div><!-- end wrapper -->

        <a href="#" id="scroll-to-top" class="dmtop global-radius"><i class="fa fa-angle-up"></i></a>

        <!-- ALL JS FILES -->
        <script src="~/js/all.js"></script>
        <script src="~/js/responsive-tabs.js"></script>
        <script src="~/js/custom.js"></script>

        <!-- Menu Toggle Script -->
        <script>
            (function ($) {
                "use strict";
                $("#menu-toggle").click(function (e) {
                    e.preventDefault();
                    $("#wrapper").toggleClass("toggled");
                });
                smoothScroll.init({
                    selector: '[data-scroll]', // Selector for links (must be a class, ID, data attribute, or element tag)
                    selectorHeader: null, // Selector for fixed headers (must be a valid CSS selector) [optional]
                    speed: 500, // Integer. How fast to complete the scroll in milliseconds
                    easing: 'easeInOutCubic', // Easing pattern to use
                    offset: 0, // Integer. How far to offset the scrolling anchor location in pixels
                    callback: function (anchor, toggle) { } // Function to run after scrolling
                });
            })(jQuery);
        </script>
    </div>
</body>